<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CRUD-APP</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100 bg-[url('https://i.pinimg.com/736x/c9/5c/14/c95c1459a5031bcbeaf0c98e447172fa.jpg')] bg-cover bg-no-repeat bg-center h-full w-full min-h-screen overflow-hidden">
    <div class="container mx-auto p-4" id="mainDiv">
    <!-- Navbar -->
    <nav class="bg-black text-white p-4">
        <div class="flex items-center justify-between">
          <!-- Dashboard Title -->
          <h1 class="text-2xl font-bold">User Management</h1>
          
          <!-- Add User Button -->
          <button onclick="openModal()" class="bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-400">
            Add User
          </button>
        </div>
      </nav>


     <!-- Item List (Read & Delete) -->
     <div>
        <h2 class="text-2xl font-semibold text-gray-1000 mb-4">List</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">

          <!-- Sample Item 1 -->
           <% users.forEach((user) => { %>
          <div class="flex justify-between items-center p-4 bg-white border border-gray-300 rounded-md shadow-md">
            <div>
              <h3 class="font-semibold text-lg text-gray-800">  Name : <%= user.name%></h3>
              <p class="text-gray-600"><b>Email : </b><%= user.email%></p>
              <p class="text-gray-600"><b>Age : </b><%= user.age%></p>
            </div>
            <div class="flex space-x-4">
              <button id="editBtn" class="px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-400" data-user-id="<%= user._id %>" data-user-name="<%= user.name%>" data-user-email="<%= user.email %>" data-user-age="<%= user.age %>">Edit</button>
              <button  onclick="openDelete()" class="px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-400" >Delete</button>
            </div>
          </div>



          <div id="deleteModal" class="hidden fixed inset-0 z-10" aria-labelledby="modal-title" role="dialog" aria-modal="true">
            <!-- Modal Overlay -->
            <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
            
            <!-- Modal Content -->
            <div class="fixed inset-0 z-10 w-screen overflow-y-auto">
              <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
                <div class="relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg">
                  
                  <!-- Modal Header & Body -->
                  <div class="bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4">
                    <div class="sm:flex sm:items-start">
                      <div class="mx-auto flex h-12 w-12 shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
                        <svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                          <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z" />
                        </svg>
                      </div>
                      <div class="mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left">
                        <h3 class="text-base font-semibold text-gray-900" id="modal-title">Delete</h3>
                        <div class="mt-2">
                          <p class="text-sm text-gray-500">Are you sure you want to delete this user?  All of the data will be permanently removed. This action cannot be undone.</p>
                        </div>
                      </div>
                    </div>
                  </div>
                  
                  <!-- Modal Footer -->
                  <div class="bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6">
                    <button type="button" id="deleteBtn" data-user-id="<%= user._id %>" class="inline-flex w-full justify-center rounded-md bg-red-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 sm:ml-3 sm:w-auto">
                      Delete
                    </button>
                    <button type="button" onclick="closeDelelte()" class="mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto">
                      Cancel
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <!-- Delete Confirmation Modal -->


          <% }) %>

          <!-- Add more items here -->
        </div>
      </div>
    </div>




    <!-- add Modal -->
    <div id="userModal" class="fixed  p-3 inset-0 bg-gray-900 bg-opacity-50 flex justify-center items-center hidden">
        <div class="bg-white p-6 rounded-md w-full sm:w-3/4 md:w-1/2 lg:w-1/3 xl:w-1/4">
          <h2 class="text-xl font-semibold mb-4">Add User</h2>
          
          <form id="addUserForm">
            <div class="mb-4">
              <label for="name" class="block text-gray-700">Name</label>
              <input type="text" id="name" class="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" >
            </div>
            
            <div class="mb-4">
              <label for="email" class="block text-gray-700">Email</label>
              <input type="email" id="email" class="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" >
            </div>
            
            <div class="mb-4">
              <label for="age" class="block text-gray-700">Age</label>
              <input type="number" id="age" class="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" >
            </div>
 
            <div class="w-full h-[50px]">
            <span style="color: red;" id="addError"></span>
            </div>
      
            <div class="flex justify-end space-x-4">
              <button type="button" onclick="closeModal()" class="px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600">Cancel</button>
              <button type="submit" id="adduserbtn" class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600">Add User</button>
            </div>
          </form>
        </div>
      </div>
      


      <!-- edit Modal -->
    <div id="editModal" class="fixed  p-3 inset-0 bg-gray-900 bg-opacity-50 flex justify-center items-center hidden">
        <div class="bg-white p-6 rounded-md w-full sm:w-3/4 md:w-1/2 lg:w-1/3 xl:w-1/4">
          <h2 class="text-xl font-semibold mb-4">Add User</h2>
          
          <form id="editUserForm">
            <div class="mb-4">
              <label for="name" class="block text-gray-700">Name</label>
              <input type="text" id="editname" class="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" >
            </div>
            
            <div class="mb-4">
              <label for="email" class="block text-gray-700">Email</label>
              <input type="email" id="editemail" class="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" >
            </div>
            
            <div class="mb-4">
              <label for="age" class="block text-gray-700">Age</label>
              <input type="number" id="editage" class="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" >
            </div>

            <div class="w-full h-[50px]">
                <span style="color: red;" id="editError"></span>
                </div>
      
            <div class="flex justify-end space-x-4">
              <button type="button" onclick="closeEditModal()" class="px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600">Cancel</button>
              <button type="submit" id="edituserbtn" class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600" >Edit User</button>
            </div>
          </form>
        </div>
      </div>


      <script src="https://cdn.tailwindcss.com"></script>

      <script>

        //delete modal

             function openDelete() {
              document.getElementById("deleteModal").classList.remove("hidden");
              }

              function closeDelelte() {
                document.getElementById("deleteModal").classList.add("hidden");
              }

       //add modal

       function openModal() {
       document.getElementById('userModal').classList.remove('hidden');
       }

       function closeModal() {
       document.getElementById('userModal').classList.add('hidden');
       }

       let nameRegex = /^[a-zA-Z]+$/;
       let emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;


       document.getElementById('adduserbtn').addEventListener('click', async (event) => {
        event.preventDefault();

       const name = document.getElementById('name').value.trim();
       const email = document.getElementById('email').value.trim();
       const age = document.getElementById('age').value.trim();
       const error = document.getElementById('addError');

       if(!nameRegex.test(name)) {
        error.innerHTML = 'please write a valid name - [A - Z]'
        setTimeout(() => { error.innerHTML = '' }, 5000);
        return;
       } else {
        error.innerHTML = '';
       }
       if(!emailRegex.test(email)) {
        error.innerHTML = 'please write a valid email'
        setTimeout(() => { error.innerHTML = '' }, 5000);
        return;
       } else {
        error.innerHTML = '';
       }
       if(age < 5 || age > 100) {
        error.innerHTML = 'age should be 5 - 100'
        setTimeout(() => { error.innerHTML = '' }, 5000);
        return;
       } else {
        error.innerHTML = ''
       }

       const response = await fetch('/addUser',{
            method: 'POST',
            headers: {
                'Content-Type':'application/json'
            },
            body: JSON.stringify({name,email,age})
       })
       
       if(response.ok) {
       location.reload();
       closeModal();
       } else {
        const data = await response.json();
        error.innerHTML = data.message;
        setTimeout(() => { error.innerHTML = '' }, 5000);
       }

       });


       //edit modal

       function openEditModal() {
        document.getElementById('editModal').classList.remove('hidden')
       }

       function closeEditModal() {
        document.getElementById('editModal').classList.add('hidden');
       }

       document.getElementById('mainDiv').addEventListener('click',async (event) => {
        if(event.target.id === 'editBtn') {
            event.preventDefault();
        

       const nameInput = document.getElementById('editname')
       const emailInput = document.getElementById('editemail')
       const ageInput = document.getElementById('editage')
  
       const userId = event.target.getAttribute('data-user-id');
       const name = event.target.getAttribute('data-user-name');
       const email = event.target.getAttribute('data-user-email');
       const age = event.target.getAttribute('data-user-age');


       nameInput.value = name;
       emailInput.value = email;
       ageInput.value = age;

       openEditModal();

       const intialName = nameInput.value.trim();
       const initalEmail = emailInput.value.trim();
       const intitialAge = ageInput.value.trim();

       document.getElementById('edituserbtn').addEventListener('click', async (event) => {
        event.preventDefault();

        const finalName = nameInput.value.trim();
        const finalEmail = emailInput.value.trim();
        const finalAge = ageInput.value.trim();
        const editError = document.getElementById('editError')

        if(intialName === finalName && initalEmail === finalEmail && intitialAge === finalAge) {
            closeEditModal();
            return;
        }

        if(!nameRegex.test(finalName)) {
          editError.innerHTML = 'please write a valid name - [A - Z]'
          setTimeout(() => { editError.innerHTML = '' }, 5000);
        return;
       } else {
        editError.innerHTML = '';
       }
       if(!emailRegex.test(finalEmail)) {
        editError.innerHTML = 'please write a valid email'
        setTimeout(() => { editError.innerHTML = '' }, 5000);
        return;
       } else {
        editError.innerHTML = '';
       }
       if(finalAge < 5 || finalAge > 100) {
        editError.innerHTML = 'age should be 5 - 100'
        setTimeout(() => { editError.innerHTML = '' }, 5000);
        return;
       } else {
        editError.innerHTML = ''
       }

        const response = await fetch(`/editUser/${userId}`, {
            method: 'PATCH',
            headers: {
                'Content-type':'application/json',
            },
            body: JSON.stringify({
                name: finalName,
                email: finalEmail,
                age: finalAge
            }),
        })

        if(response.ok) {
            closeEditModal();
            location.reload();
        }
      
         });

        } else if(event.target.id === 'deleteBtn') {
            event.preventDefault();

            const userId = event.target.getAttribute('data-user-id');
            const response = await fetch(`/deleteUser/${userId}`,{
             method: 'DELETE',
            });
            if(response.ok) {
                location.reload();
            }
        }
       })


      </script>
</body>
</html>